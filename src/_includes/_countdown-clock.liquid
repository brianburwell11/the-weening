{% comment %}
  Countdown Clock Subtemplate
  Usage: {% include '_countdown-clock.liquid', title: 'Days to Halloween', targetDate: '2025-10-31' %}

  Parameters:
  - title: The text to display above the countdown (default: 'Days to Halloween')
  - targetDate: The target date in ISO format (default: '2025-10-31')

  This template includes:
  - HTML structure for the countdown clock
  - JavaScript functionality for the countdown (days only)
{% endcomment %}

{% unless clockTitle %}{% assign title = 'Days to Halloween' %}{% endunless %}
{% unless targetDate %}{% assign targetDate = '2026-10-31' %}{% endunless %}

<!-- Countdown Clock -->
<div class="countdown-clock-container">
  <h2 class="countdown-clock-title">{{ title }}</h2>

  <!-- Clock Face Image -->
  <div class="clock-face">
    <img src="/assets/img/nightmare-clock.png" alt="Nightmare Clock" class="nightmare-clock-image">
    <img src="/assets/img/clock-arm.png" alt="Clock Arm" class="clock-arm-image" id="clock-arm-minute">
    <img src="/assets/img/clock-arm.png" alt="Clock Arm" class="clock-arm-image" id="clock-arm-hour">
    <img src="/assets/img/weening-logo.png" alt="Weening Logo" class="weening-logo-overlay">
    <span class="time-value" id="days-hundreds">0</span>
    <span class="time-value" id="days-tens">0</span>
    <span class="time-value" id="days-ones">0</span>
    <h2 class="countdown-clock-title-overlay">{{ title }}</h2>
  </div>
</div>

<style>
  @font-face {
    font-family: 'Nightmare';
    src: url('/public/fonts/NITEMARE.woff2') format('woff2');
    font-weight: normal;
    font-style: normal;
  }

  .countdown-clock-container {
    font-family: 'Nightmare', sans-serif;
  }

  .countdown-clock-title {
    font-family: 'Nightmare', sans-serif;
    display: none;
  }

  .countdown-clock-title-overlay {
    font-family: 'Nightmare', sans-serif;
    position: absolute;
    bottom: 5.5%;
    left: 50%;
    transform: translateX(-50%);
    margin: 0;
    text-align: center;
    z-index: 10;
    color: black;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
    font-size: clamp(1.25rem, 4.4vw, 1.8rem);
  }

  .time-value {
    font-family: 'Nightmare', sans-serif;
    font-size: clamp(1.25rem, 4.5vw, 1.8rem);
    color: black;
    padding: clamp(8px, 2vw, 15px) clamp(12px, 3vw, 20px);
    border-radius: 8px;
    position: absolute;
    z-index: 10;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    bottom: 14%;
  }

  #days-hundreds {
    left: 50%;
    transform: translateX(-140%);
  }

  #days-tens {
    left: 50%;
    transform: translateX(-50%);
  }

  #days-ones {
    left: 50%;
    transform: translateX(40%);
  }

  .clock-face {
    display: flex;
    justify-content: center;
    margin: 20px 0;
    transform: translateY(-25%);
    position: relative;
  }

  .nightmare-clock-image {
    width: 100%;
    height: auto;
    max-width: 90vw;
    max-height: 60vh;
    object-fit: contain;
  }

  #clock-arm-minute {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.4, 0.25);
    max-width: 80%;
    max-height: 80%;
    z-index: 5;
    pointer-events: none;
  }

  #clock-arm-hour {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.3);
    max-width: 80%;
    max-height: 80%;
    z-index: 6;
    pointer-events: none;
  }

  .weening-logo-overlay {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.1);
    z-index: 7;
    pointer-events: none;
  }
</style>

<script>
  // Countdown Clock Functionality
  function updateCountdownClock() {
    // Target date from parameter
    const targetDate = new Date('{{ targetDate }}');
    const now = new Date();
    const timeDifference = targetDate - now;

    if (timeDifference > 0) {
      // Calculate days
      const days = Math.floor(timeDifference / (1000 * 60 * 60 * 24));

      // Update the display with individual digits
      const daysStr = days.toString().padStart(3, '0');
      document.getElementById('days-hundreds').textContent = daysStr[0];
      document.getElementById('days-tens').textContent = daysStr[1];
      document.getElementById('days-ones').textContent = daysStr[2];
    } else {
      // Countdown has reached zero
      document.getElementById('days-hundreds').textContent = '0';
      document.getElementById('days-tens').textContent = '0';
      document.getElementById('days-ones').textContent = '0';
    }
  }

  // Function to update clock arm rotations based on current date
  function updateClockArms() {
    const now = new Date();

    // Calculate hour hand rotation based on month and day
    const month = now.getMonth() + 1; // Transform 0-11 to 1-12 (Jan=1, Dec=12)
    const dayOfMonth = now.getDate();

    // Base month rotation
    const baseMonthRotation = month * 30;
    // Additional rotation based on day of month (each day adds 1 degree to the month)
    const dayProgressRotation = (dayOfMonth - 1) * 1;

    const hourRotation = baseMonthRotation + dayProgressRotation;
    console.log(`Month: ${month}, Day: ${dayOfMonth}, Hour rotation: ${hourRotation}`);

    // Apply rotation to hour arm
    const hourArm = document.getElementById('clock-arm-hour');
    if (hourArm) {
      hourArm.style.transform = `translate(-50%, -50%) scale(0.35) rotate(${hourRotation}deg)`;
    }

    // Calculate minute hand rotation based on day of month
    const minuteRotation = (dayOfMonth / 30) * 360;

    const minuteArm = document.getElementById('clock-arm-minute');
    if (minuteArm) {
      minuteArm.style.transform = `translate(-50%, -50%) scale(0.6, 0.4) rotate(${minuteRotation}deg)`;
    }
  }

  // Initialize countdown clock and clock arms, update every day
  updateCountdownClock();
  updateClockArms();
  setInterval(updateCountdownClock, 1000 * 60 * 60 * 24);
  setInterval(updateClockArms, 1000 * 60 * 60 * 24);
</script>
